// File generated by build.js, do not edit
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "blakejs", "./bytes.cjs", "./hasher.cjs"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.blake2b512 = exports.blake2b504 = exports.blake2b496 = exports.blake2b488 = exports.blake2b480 = exports.blake2b472 = exports.blake2b464 = exports.blake2b456 = exports.blake2b448 = exports.blake2b440 = exports.blake2b432 = exports.blake2b424 = exports.blake2b416 = exports.blake2b408 = exports.blake2b400 = exports.blake2b392 = exports.blake2b384 = exports.blake2b376 = exports.blake2b368 = exports.blake2b360 = exports.blake2b352 = exports.blake2b344 = exports.blake2b336 = exports.blake2b328 = exports.blake2b320 = exports.blake2b312 = exports.blake2b304 = exports.blake2b296 = exports.blake2b288 = exports.blake2b280 = exports.blake2b272 = exports.blake2b264 = exports.blake2b256 = exports.blake2b248 = exports.blake2b240 = exports.blake2b232 = exports.blake2b224 = exports.blake2b216 = exports.blake2b208 = exports.blake2b200 = exports.blake2b192 = exports.blake2b184 = exports.blake2b176 = exports.blake2b168 = exports.blake2b160 = exports.blake2b152 = exports.blake2b144 = exports.blake2b136 = exports.blake2b128 = exports.blake2b120 = exports.blake2b112 = exports.blake2b104 = exports.blake2b96 = exports.blake2b88 = exports.blake2b80 = exports.blake2b72 = exports.blake2b64 = exports.blake2b56 = exports.blake2b48 = exports.blake2b40 = exports.blake2b32 = exports.blake2b24 = exports.blake2b16 = exports.blake2b8 = void 0;
    const blakejs_1 = __importDefault(require("blakejs"));
    const bytes = __importStar(require("./bytes.cjs"));
    const hasher_js_1 = require("./hasher.cjs");
    const { blake2b } = blakejs_1.default;
    exports.blake2b8 = (0, hasher_js_1.from)({
        name: 'blake2b-8',
        code: 0xb201,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 1))
    });
    exports.blake2b16 = (0, hasher_js_1.from)({
        name: 'blake2b-16',
        code: 0xb202,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 2))
    });
    exports.blake2b24 = (0, hasher_js_1.from)({
        name: 'blake2b-24',
        code: 0xb203,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 3))
    });
    exports.blake2b32 = (0, hasher_js_1.from)({
        name: 'blake2b-32',
        code: 0xb204,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 4))
    });
    exports.blake2b40 = (0, hasher_js_1.from)({
        name: 'blake2b-40',
        code: 0xb205,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 5))
    });
    exports.blake2b48 = (0, hasher_js_1.from)({
        name: 'blake2b-48',
        code: 0xb206,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 6))
    });
    exports.blake2b56 = (0, hasher_js_1.from)({
        name: 'blake2b-56',
        code: 0xb207,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 7))
    });
    exports.blake2b64 = (0, hasher_js_1.from)({
        name: 'blake2b-64',
        code: 0xb208,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 8))
    });
    exports.blake2b72 = (0, hasher_js_1.from)({
        name: 'blake2b-72',
        code: 0xb209,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 9))
    });
    exports.blake2b80 = (0, hasher_js_1.from)({
        name: 'blake2b-80',
        code: 0xb20a,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 10))
    });
    exports.blake2b88 = (0, hasher_js_1.from)({
        name: 'blake2b-88',
        code: 0xb20b,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 11))
    });
    exports.blake2b96 = (0, hasher_js_1.from)({
        name: 'blake2b-96',
        code: 0xb20c,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 12))
    });
    exports.blake2b104 = (0, hasher_js_1.from)({
        name: 'blake2b-104',
        code: 0xb20d,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 13))
    });
    exports.blake2b112 = (0, hasher_js_1.from)({
        name: 'blake2b-112',
        code: 0xb20e,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 14))
    });
    exports.blake2b120 = (0, hasher_js_1.from)({
        name: 'blake2b-120',
        code: 0xb20f,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 15))
    });
    exports.blake2b128 = (0, hasher_js_1.from)({
        name: 'blake2b-128',
        code: 0xb210,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 16))
    });
    exports.blake2b136 = (0, hasher_js_1.from)({
        name: 'blake2b-136',
        code: 0xb211,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 17))
    });
    exports.blake2b144 = (0, hasher_js_1.from)({
        name: 'blake2b-144',
        code: 0xb212,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 18))
    });
    exports.blake2b152 = (0, hasher_js_1.from)({
        name: 'blake2b-152',
        code: 0xb213,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 19))
    });
    exports.blake2b160 = (0, hasher_js_1.from)({
        name: 'blake2b-160',
        code: 0xb214,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 20))
    });
    exports.blake2b168 = (0, hasher_js_1.from)({
        name: 'blake2b-168',
        code: 0xb215,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 21))
    });
    exports.blake2b176 = (0, hasher_js_1.from)({
        name: 'blake2b-176',
        code: 0xb216,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 22))
    });
    exports.blake2b184 = (0, hasher_js_1.from)({
        name: 'blake2b-184',
        code: 0xb217,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 23))
    });
    exports.blake2b192 = (0, hasher_js_1.from)({
        name: 'blake2b-192',
        code: 0xb218,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 24))
    });
    exports.blake2b200 = (0, hasher_js_1.from)({
        name: 'blake2b-200',
        code: 0xb219,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 25))
    });
    exports.blake2b208 = (0, hasher_js_1.from)({
        name: 'blake2b-208',
        code: 0xb21a,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 26))
    });
    exports.blake2b216 = (0, hasher_js_1.from)({
        name: 'blake2b-216',
        code: 0xb21b,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 27))
    });
    exports.blake2b224 = (0, hasher_js_1.from)({
        name: 'blake2b-224',
        code: 0xb21c,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 28))
    });
    exports.blake2b232 = (0, hasher_js_1.from)({
        name: 'blake2b-232',
        code: 0xb21d,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 29))
    });
    exports.blake2b240 = (0, hasher_js_1.from)({
        name: 'blake2b-240',
        code: 0xb21e,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 30))
    });
    exports.blake2b248 = (0, hasher_js_1.from)({
        name: 'blake2b-248',
        code: 0xb21f,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 31))
    });
    exports.blake2b256 = (0, hasher_js_1.from)({
        name: 'blake2b-256',
        code: 0xb220,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 32))
    });
    exports.blake2b264 = (0, hasher_js_1.from)({
        name: 'blake2b-264',
        code: 0xb221,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 33))
    });
    exports.blake2b272 = (0, hasher_js_1.from)({
        name: 'blake2b-272',
        code: 0xb222,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 34))
    });
    exports.blake2b280 = (0, hasher_js_1.from)({
        name: 'blake2b-280',
        code: 0xb223,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 35))
    });
    exports.blake2b288 = (0, hasher_js_1.from)({
        name: 'blake2b-288',
        code: 0xb224,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 36))
    });
    exports.blake2b296 = (0, hasher_js_1.from)({
        name: 'blake2b-296',
        code: 0xb225,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 37))
    });
    exports.blake2b304 = (0, hasher_js_1.from)({
        name: 'blake2b-304',
        code: 0xb226,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 38))
    });
    exports.blake2b312 = (0, hasher_js_1.from)({
        name: 'blake2b-312',
        code: 0xb227,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 39))
    });
    exports.blake2b320 = (0, hasher_js_1.from)({
        name: 'blake2b-320',
        code: 0xb228,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 40))
    });
    exports.blake2b328 = (0, hasher_js_1.from)({
        name: 'blake2b-328',
        code: 0xb229,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 41))
    });
    exports.blake2b336 = (0, hasher_js_1.from)({
        name: 'blake2b-336',
        code: 0xb22a,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 42))
    });
    exports.blake2b344 = (0, hasher_js_1.from)({
        name: 'blake2b-344',
        code: 0xb22b,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 43))
    });
    exports.blake2b352 = (0, hasher_js_1.from)({
        name: 'blake2b-352',
        code: 0xb22c,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 44))
    });
    exports.blake2b360 = (0, hasher_js_1.from)({
        name: 'blake2b-360',
        code: 0xb22d,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 45))
    });
    exports.blake2b368 = (0, hasher_js_1.from)({
        name: 'blake2b-368',
        code: 0xb22e,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 46))
    });
    exports.blake2b376 = (0, hasher_js_1.from)({
        name: 'blake2b-376',
        code: 0xb22f,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 47))
    });
    exports.blake2b384 = (0, hasher_js_1.from)({
        name: 'blake2b-384',
        code: 0xb230,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 48))
    });
    exports.blake2b392 = (0, hasher_js_1.from)({
        name: 'blake2b-392',
        code: 0xb231,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 49))
    });
    exports.blake2b400 = (0, hasher_js_1.from)({
        name: 'blake2b-400',
        code: 0xb232,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 50))
    });
    exports.blake2b408 = (0, hasher_js_1.from)({
        name: 'blake2b-408',
        code: 0xb233,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 51))
    });
    exports.blake2b416 = (0, hasher_js_1.from)({
        name: 'blake2b-416',
        code: 0xb234,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 52))
    });
    exports.blake2b424 = (0, hasher_js_1.from)({
        name: 'blake2b-424',
        code: 0xb235,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 53))
    });
    exports.blake2b432 = (0, hasher_js_1.from)({
        name: 'blake2b-432',
        code: 0xb236,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 54))
    });
    exports.blake2b440 = (0, hasher_js_1.from)({
        name: 'blake2b-440',
        code: 0xb237,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 55))
    });
    exports.blake2b448 = (0, hasher_js_1.from)({
        name: 'blake2b-448',
        code: 0xb238,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 56))
    });
    exports.blake2b456 = (0, hasher_js_1.from)({
        name: 'blake2b-456',
        code: 0xb239,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 57))
    });
    exports.blake2b464 = (0, hasher_js_1.from)({
        name: 'blake2b-464',
        code: 0xb23a,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 58))
    });
    exports.blake2b472 = (0, hasher_js_1.from)({
        name: 'blake2b-472',
        code: 0xb23b,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 59))
    });
    exports.blake2b480 = (0, hasher_js_1.from)({
        name: 'blake2b-480',
        code: 0xb23c,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 60))
    });
    exports.blake2b488 = (0, hasher_js_1.from)({
        name: 'blake2b-488',
        code: 0xb23d,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 61))
    });
    exports.blake2b496 = (0, hasher_js_1.from)({
        name: 'blake2b-496',
        code: 0xb23e,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 62))
    });
    exports.blake2b504 = (0, hasher_js_1.from)({
        name: 'blake2b-504',
        code: 0xb23f,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 63))
    });
    exports.blake2b512 = (0, hasher_js_1.from)({
        name: 'blake2b-512',
        code: 0xb240,
        encode: (input) => bytes.coerce(blake2b(input, undefined, 64))
    });
});
